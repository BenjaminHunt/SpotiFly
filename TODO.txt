TODO List for this app:

Shortlist:
:) End of song calculator/timer/stopwatch => set interval
- String cleaning
- playlist link support
- use cookies/local storage

Core functionality:
:) Next song calculations
- Page Progression (not all on new.html)
- View/Select Personal Playlists after  (use css flex for display)
- Submit a Playlist link
- Shuffle & Play <x> songs
:) Auto-update Album Cover, song information
    --> works with current functionality

Answer formatting:
- support "basically correct" answers => songs existing on singles and LPs, etc
- Hemming Distance for awkward song spelling (i.e. worst nites => worst nights)
- String Standardization/Cleaning (i.e. remove "(Deluxe)" from album names)
- Handle Special Characters

Goals:
- Reveal Answer button!
- Disable pausing from browser? maybe not necessary
- remove answers at top. maybe have debug mode?
- Function that focuses unanswered fields
- Replace breaks with css spacing/padding
- Track Progression Bar, timer
- Accent Background Colors based on album cover
- Results page
- Quiz again?
- Support guessing ALL artists for songs with multiple artists *Probably very difficult
- Presentable Front End Theme
- Determine if song should automatically play when starts on web browser

Bugs/Improvement:
- Flickery album updates => multiple updates occurring?
- Random flickers throughout song?
- Doesn't load album cover unless spotify is previously playing on another device?
- If "next song" selected while paused, will play automatically. Button SHOULD display "PAUSE" but doesn't
:) If song ends, next song plays automatically and song does not update
- Consider: Pause after end of song => manual continues OR repeat song
:( let song = data.item.name; => Sometimes undefined??
    --> Thought fixed,  but it isn't. Within update track function that has its own call

Other ideas:
- Parcels => enable hot modulation (tool)
- Reducts/React.js
- swap to vscode
